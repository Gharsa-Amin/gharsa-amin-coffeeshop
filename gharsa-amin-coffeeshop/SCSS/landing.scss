@use './partials/global' as *;
$font-stack: 'Open Sans'; 
$font-color: #393939; 
$font-size: 1rem; 
$primary-color:#5BACC3; 
$secondary-color: #FFF0ED; 
$tertiary-color: #909090; 
$quaternary-color:#393939;
$hover-color-1:  #5BACC3; 

/* -----------------------
** header section
**  ------------------------*/
/* shared across both pages, therefore, its in the global.scss folder. */


/*-------------------
** hero section
** ----------------------*/

.hero { /* have already defined the font color on the global class, and in the body, so it should apply across the board, */ 
    background-image: url("../assets/images/coffeebeans-hero.png");
    background-repeat: no-repeat;
    background-position: top 10% left 80%;/* if you wanna be more specific about the background position, instead of saying, 'cover' you can define the parameters. */
    background-color: $secondary-color;  /* this will be the color based on the scss variables. */
    height: 40rem;
    display: flex;  /* this will make the container a flex container, and applying flex to the parent will make the whole container flex. */
    justify-content: flex-start;
    align-items: center; 

    &__header { /* a cool way of using flex, its called nesting, when you use the BEM naming convention, and then use the children as nested to the parent */
        padding-left: 6.25rem;
        font-size: 3.75rem;
        color: $font-color;  /* this will be the color based on the scss variables. */
        font-weight: 300;
    }

    &__paragraph {
        font-size: 1.125rem;
        color: $font-color;
        font-weight: 300;
        padding-left: 6.25rem;
        margin-top: 0;
        padding-top: 1.25rem;
    }
    &__border {
        position: relative; /* we can apply relative position on the children elements, while applying absolute position on the parent  */
        display: inline-block; /* It can make the border fit the button size */
        background-color: $secondary-color;
        z-index: 1; /* good reference for z-index: https://www.w3schools.com/cssref/pr_pos_z-index.php; The z-index property specifies the stack order of an element.An element with greater stack order is always in front of an element with a lower stack order. z-index only works on positioned elements.*/ 
      }
      
      
      &__border::before { /* ::before  is a pseudo-element, it can be used to add content to an element, without adding any content; so for example, i want to add a border around but dont need to have classes, i can use this and wrap content around empty "" */
        content: "";
        position: absolute; 
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        border: 2px solid $quaternary-color; /* leaving border in px instead of rem for better user experience */ 
        transform: rotate(5deg); /* Transform rotate is a function that rotates an object or element around a fixed point by a specified degree, either clockwise or counterclockwise. This property allows you to rotate, scale, move, skew, etc., elements.https://www.w3schools.com/cssref/css3_pr_transform.php */
        z-index: 2; 
        border-radius: 5px; /* it makes the button to have a rounded effect,leaving it to px instead of rem since its border */
        pointer-events: none; /* you only want the clickable  area to be the button itself, not the border */
      }
    &__button {
        padding-left: 6.25rem;
        padding-right: 6.25rem;
        position: relative; /* To keep it on top of the border, it is applied relative to the objects around it */
        z-index: 1;
        padding: .625rem 1.25rem; 
        font-size: 1rem; 
        cursor: pointer; 
        border-radius: 5px; /* leaving this in px instead of rem because it is border, and we dont want the borders to change when the user zooms in */ 

        button {
            background-color: $primary-color;
            color: #FFF;
            border: none;
            padding: 1rem 2rem; /* this range of padding is good for designing buttons and you can use it alongside inline blocks*/
            cursor: pointer;  /* this will change the cursor to a pointer when you hover over the button */
            font-size: 1.3125rem;
            font-family: $font-stack;
            font-weight: 400;
            text-align: center;

            &:hover { /* hover is a very cool feature for clickable buttons */
                background-color: $hover-color-1;
                transition: 0.3s;
                border-radius: 10px;  /* border radius helps to round the edges, and mostly 10-12px is a good range to accomplish the end goal. */
                transform: scale(1.5);   /* this will make the button bigger when you hover over it, and the button will come back to the normal state once its unhovered. */
            }
            
        }
    }
}

/*--------------
** main section
**---------------*/

/** main section-- product section
**-------------------*/
.products {
    display: flex;
    justify-content: center;
    background-color: #F7F7F7;

  }
  .product-grid {
    display: flex;
    background-color: #F7F7F7;
    justify-content: space-around; /*space around gives it space around the objects, space between gives space between the objects, and space evenly distributes space evenly, they only work on row; not columns.*/
    height: 31.25rem;
  }
  
  .product-section {
    background-color: #F7F7F7;
    color: $font-color;
    margin-bottom: 10rem;
    display: flex;
    justify-content: center;
  
  &__title { /* A Ver great way to utilize the BEM naming convention alongside the Sass; if you follow the name__ format for most of your BEAM, its much easier to use it later for Sass. Good BEAM, easier Saas */ 
    font-size: 3.75rem;
    font-weight: 300;
  }
  
  &__image {
    flex: 1;
    border-radius: 10px 10px 0 0;
    padding-top: 0.625rem;
    padding-bottom: 1.875rem;
    padding-left: 6.25rem;
  }
  
  &__item {
    flex: 1;
    text-align: left;
  }
  
  &__quantity {
    text-align: left; /* Align text to the left */
    font-size: 1.125rem;
    font-weight: 400;
    color:$tertiary-color;
  }

  &__price {
    text-align: right;
    font-size: 2.0625rem;
    font-weight: 700;
    color: $primary-color;}
  
    &__card {
      background-color: #FFFFFF;
      border: solid #FFFFFF;
      width: 20.625rem;
      box-shadow: 0 5px 9px -1px rgba(0, 0, 0, 0.25);
      margin: 0%;
      padding: 1.25rem;
    }

    &__button {
      position: relative;
      display: flex;
      margin-top: 1.5rem;
      justify-content: center;
      background-color: $primary-color;
      color: #FFF;
      border: none;
      border-radius: 12px;
      padding: 1rem 3rem;
      cursor: pointer;
      font-size: 1.125rem;
      text-decoration: none;
      overflow: hidden;
      
    }
    
  }

  p.product-section__price {
    margin: 0;
    padding-top: 0;
    padding-bottom: 1.25rem;
  }
  
  p.product-section__quantity {
    margin: 0;
    padding-left: 1.25rem;
  }
  
  h3.product-section__item {
    margin: 0;
    font-size: 2.0625rem;
    font-weight: 300;
    padding-left: 1.25rem;
  }
  
  .product-details {
    background-color: $secondary-color;
    border: solid $secondary-color;
    border-left: 4.5008px;
    box-shadow: 0 5px 9px -1px rgba(0, 0, 0, 0.25);
  }

  .product-section__button button {
    background-color: $primary-color;
    color: #FFF;
    border-color: $quaternary-color;
    padding: 1rem 3rem;
    cursor: pointer;
    font-size: 1.125rem;
    text-decoration: none;
    width: 11.25rem;
    font-family:$font-stack;
  }
  
  a.product-section__button {
    background-color: #F7F7F7;
    margin: 0;
    padding-top: 1.25rem;
    padding-bottom: 4rem;
    display: flex;
    justify-content: center;
  }
  
    /**-------------------*/
/** main section-- Final section
**-------------------*/

.final-section {
  display: flex;
  justify-content: space-around;
  padding: 1.875rem;
  margin-bottom: 6.25rem;
  justify-content: space-around;
  align-items: flex-start;
  margin-bottom: 9.375rem;

&__content {
  max-width: 25rem; 
  flex: 1; /* how much space do you want the content to take in connection to others */
  margin-right: 1.25rem;
}

&__image {
  position: relative; /* applying position relative to parent to apply absolute on children*/
  padding: .625rem;
  width: 17.5rem;

   &::before {
  content: '';
  position: absolute;
  top: -10px; /*In order to move the border above */
  left: -10px; /* this moves the border to have a horizontol space*/
  right: -10px; 
  bottom: -10px;
  border: 5px solid $primary-color; /*leaving px instead of rem since its a border */
  transform: rotate(-20deg); /* rotate is a cool feature, it rotates, and gives it angles, you can determine which angle, and how much you want to rotate. */ 
  z-index: 1; /* to have the border on top of the menu box */
}

    img:first-child {
  width: 17.5rem; /* In order to make the background image fill it's container */
  height: auto;}

 img:last-child {
  position: absolute; /* child class so giving it absolute position relative to its parent. */
  top: 20%;
  left: 50%;
  width: 7.5rem;
  height: auto;
  transform: translateX(-50%); /* this turns it to be horizontally */
}
}

&__header {
  font-size: 3.75rem;
  font-weight: 300;
  font-family: $font-stack;  /* using the font stack variable because the body style for some reason is over-written, and doesnt apply unless I specifically apply it here to the child. */
  width: 31.25rem;
  color: $quaternary-color;
  display: flex;
  margin-bottom: 0;
}

&__description {
  font-size: 1.125rem;
  font-weight: 400;
  font-family: $font-stack; 
  width: 31.25rem;
  color: $quaternary-color;
}

&__images {
  display: flex;
  justify-content: space-between;
}

&__button {
  display: flex;
  margin-top: 1.5rem;
  justify-content: left;
  text-decoration: none;
  z-index: 3; 
  top: -0.3125rem;
  left: 0;
  position: relative;
  /* Place it behind the button */
     button {
  background-color: $primary-color;
  color: #FFF;
  border-color: $quaternary-color;
  padding: 1rem 2rem;
  cursor: pointer;
  font-size: 1.125rem;
  font-family: $font-stack;
}

}

&__paragraph {
  margin-bottom: 2rem;
  background-color: $quaternary-color;
  color: #FFF;
  text-align: center;
  font-size: 2.8125rem;
  width: 90%;
  font-weight: 400;
  font-size: 2.8125rem;
  color: #fff;
  padding: 1.25rem;
  margin: 1.25rem;
  margin-bottom: 10.625rem;
}

  &__paragraph-special {
  font-weight: 700;
}
}

@keyframes rotate { /* this rotates the image, 360deg rotates it all the way from top to bottom, and in circles. if we change the deg, then it will only rotate to that degree.   */
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
} 
/*
.rotate { this class will rotate the animation indefinately and without any user interactions.
  animation: rotate 2s linear infinite;
} 
  */

.final-section__image:hover .rotate { /* this will only rotate when the user hovers over the animation  */
  animation: rotate 2s linear infinite;
}

@keyframes flash {
  0%, 100% {
    background-color: $quaternary-color; /* Original color */
  }
  50% {
    background-color: $primary-color; /* Flash color */
  }
}
.final-section__paragraph { /* @keyframes flash helps with defining the color transitions. Infinite is giving it ongoing non-stop effect. 0% and 100% the background color is black, and at50% the backround color changes to the animation color. */
  animation: flash 2.5s infinite; /* Continuous animation */
}

/*----------------------
** main section -- footer section
**------------*/

.footer {  /* this is the footer section */
  display: flex;
  justify-content: space-around;
  align-items: flex-start; /* Aligns items to the start */
  padding: 1.25rem;
  position: relative; /* Allows absolute positioning of child elements */
  overflow: visible;
  background-color: $secondary-color;
  margin: 0; /* Ensures logos can overflow */

&__container {
  display: flex;
  flex-direction: column; /* Stacks the articles vertically */
}

&__paragraph {
  font-size: 1.125rem;
  font-weight: 400;
  color: $quaternary-color;}

&__headline--title {
    font-weight: 300;
    color: $quaternary-color;
    font-size: 2.0625rem;
  }
  
}

.footer-logo1 { /* I added target = blank to the logos since the instructions says to connect to external  websites */
  position: absolute;
  top: -1.25rem; /* this moves the logo up.*/
  left: -3.125rem; /* Aligns logo to the left */
  opacity: 25%;
}

.footer-logo2 {
  position: absolute;
  opacity: 25%;
  bottom: 0rem; /* this moves the logo down,negative makes it out of the flow */
  right: -4.375rem;
  margin: 0%;
  padding: 0%;
}








  